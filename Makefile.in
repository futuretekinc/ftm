include ${TOPDIR}/.config

export PLATFORM=${CONFIG_PLATFORM}
export MODEL=${CONFIG_MODEL}
export CROSS=${CONFIG_CROSS_COMPILE}
export HOST=${CONFIG_HOST}
export BUILD=${CONFIG_BUILD}
export TARGETMACH=arm-linux
export CC=${CROSS}gcc
export CXX=${CROSS}g++
export AR=${CROSS}ar
export LD=${CROSS}ld
export AS=${CROSS}as
export STRIP=${CROSS}strip
export RANLIB=${CROSS}ranlib

export PKGDIR=${TOPDIR}/pkg
export BUILDDIR=${TOPDIR}/build/${CONFIG_PLATFORM}
export DESTDIR=${BUILDDIR}/_root
export PREFIX=/usr

CONFIGDIR=/etc/config
INITDDIR=/etc/init.d
RCDDIR=/etc/rc.d

CONFIGURED_FILE=${BUILDDIR}/.configured	

define init_package
	${TOPDIR}/tools/init_package $1 ${PKGDIR}
endef

define reinit_package
	[ -d $1 ] && rm -rf $1; \
	$(call init_package,$1)
endef

define config_package
	${TOPDIR}/tools/config_package $1 "$2"
endef

define reconfig_package
	rm -f $1/.ftm/config; \
	$(call config_package $1 $2)
	fi	
endef

define set_configured_package
	echo $1 >> ${CONFIGURED_FILE}
endef

define clear_config_package
	$(shell ${TOPDIR}/tools/remove_string ${CONFIGURED_FILE} $1)
endef

define build_package
	make -C $1 ${BUILD_OPTIONS} ${CFLAGS}
endef

define install_package
	make -C $1 install  ${INSTALL_OPTIONS} 
endef

define install_config
	$(shell ${TOPDIR}/tools/install_config $1 ${DESTDIR} ${PLATFORM} ${MODEL})
endef

define copy_package
	[ -d $2 ] || mkdir -p $2
	cp -r $1/* $2/
endef

define clean_package
	rm -rf $1 
endef

define distclean_package
	rm -rf $1 
endef
